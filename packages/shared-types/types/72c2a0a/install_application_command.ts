/* eslint-disable */
/**
 * This file was automatically generated by mdm-docs-parser.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run mdm-docs-parser:generate to regenerate this file.
 */

/**
 * This command allows the server to install an application on a device. If the app is already being managed, this command will update the app. Prior to iOS 16.0 and tvOS 16.0, this command would return NotNow when Setup Assistant was running. Starting in iOS 16.0 and tvOS 16.0, the command may be sent to supervised devices during Setup Assistant. However, you should only attempt to install device-based VPP apps or enterprise apps while in the awaiting configuration state, as the device will likely not yet have an App Store account configured, and thus commands that depend on one will fail.
 */
export interface InstallApplicationCommand {
  PayloadKeys?: {
    /**
     * The app's iTunes Store identifier.
     */
    iTunesStoreID?: number;
    /**
     * The app's bundle identifier.
     */
    Identifier?: string;
    /**
     * A dictionary that contains the app installation options.
     */
    Options?: {
      /**
       * The app's purchase type, which must be one of the following values:
       * * '0': Free apps and Legacy Volume Purchase Program (VPP) with a redemption code. This option is only available in iOS.
       * * '1': Volume Purchase Program (VPP) app assignment.
       * Set this value to '1' to install first-party apps without user login to the iTunes Store, such as Mail or Safari, or to install an iOS app with user enrollment.
       */
      PurchaseMethod?: 0 | 1;
    };
    /**
     * The URL of the app manifest, which must begin with 'https:'.
     */
    ManifestURL?: string;
    /**
     * The bitwise OR of the following management flags:
     * * '1': Remove app upon removal of MDM profile. This also requires that you pass 'true' for 'InstallAsManaged'.
     * * '4': Prevent backup of app data.
     * This value is available in iOS 5 and later, macOS 11 and later, and tvOS 10.2 and later.
     */
    ManagementFlags?: 1 | 4 | 5;
    /**
     * A dictionary that contains the initial configuration of the app, if you choose to provide it. This value is available in iOS 7 and later, macOS 11 and later, and tvOS 10.2 and later.
     */
    Configuration?: {
      /**
       * An app configuration key.
       */
      ANY?: string;
    };
    /**
     * A dictionary that contains the initial attributes of the app, if you choose to provide it. This value is available in iOS 7 and later, and tvOS 10.2 and later.
     */
    Attributes?: {
      /**
       * A per-app VPN unique identifier for this app. Available in iOS 7 and later.
       */
      VPNUUID?: string;
      /**
       * The content filter UUID for this app. Available in iOS 16 and later.
       */
      ContentFilterUUID?: string;
      /**
       * The DNS proxy UUID for this app. Available in iOS 16 and later.
       */
      DNSProxyUUID?: string;
      /**
       * The relay UUID for this app. Available in iOS 17 and later.
       */
      RelayUUID?: string;
      /**
       * An array that contains the associated domains to add to this app. Available in iOS 13 and later.
       */
      AssociatedDomains?: string[];
      /**
       * If 'true', perform claimed site association verification directly at the domain instead of on Apple's servers. Only set this to 'true' for domains that can't access the internet. Available in iOS 14 and later.
       */
      AssociatedDomainsEnableDirectDownloads?: boolean;
      /**
       * If 'false', this app isn't removable while it's a managed app. Available in iOS 14 and later, and tvOS 14 and later.
       */
      Removable?: boolean;
      /**
       * If 'true', Tap to Pay on iPhone requires users to use Face ID or a passcode to unlock their device after every transaction that requires a customer's card PIN. If 'false', the user can configure this setting on their device.
       * Available in iOS 16.4 and later.
       */
      TapToPayScreenLock?: boolean;
      /**
       * The data network name (DNN) or app category. For DNN, the value is 'DNN:name', where 'name' is the carrier provided DNN name. For app category, the value is 'AppCategory:category', where 'category' is a carrier provided string like “Enterprise1”.
       * Available in iOS 17 and later.
       */
      CellularSliceUUID?: string;
    };
    /**
     * The change management state. The only supported state is:
     * * 'Managed': Take management of the app if the user installed it already. This also requires that you pass 'true' for 'InstallAsManaged'.
     * This value doesn't work with Profile Based User Enrollment, Account Driven User Enrollment and Account Driven Device Enrollment.
     * Available in iOS 9 and later, macOS 11 and later, and tvOS 10.2 and later.
     */
    ChangeManagementState?: "Managed";
    /**
     * If 'true', install the app as a managed app.
     * For manifest-based installs, if this value is 'true', the system only considers the '.app' bundles installed into '/Applications 'as managed (macOS 11 through 13 required the 'pkg' to contain a single '.app' bundle).
     * Reinstall a managed app with this value set to 'false' to change the app to an unmanaged app.
     * This value is available in macOS 11 and later.
     */
    InstallAsManaged?: boolean;
    /**
     * If 'true', the app is an iOS app that can run on an Apple silicon in macOS 11 and later.
     */
    iOSApp?: boolean;
  };
  ResponseKeys?: {
    /**
     * The app's bundle identifier, if the user accepted the request.
     */
    Identifier?: string;
    /**
     * The app's installation state, if the user accepted the request. If this value is 'NeedsRedemption', the server must send a redemption code to complete the app installation.
     */
    State?:
      | "Queued"
      | "NeedsRedemption"
      | "Redeeming"
      | "Prompting"
      | "PromptingForLogin"
      | "ValidatingPurchase"
      | "Installing"
      | "Managed"
      | "ManagedButUninstalled"
      | "UserInstalledApp"
      | "UserRejectedFailed"
      | "PromptingForUpdate"
      | "PromptingForUpdateLogin"
      | "ValidatingUpdate"
      | "Updating"
      | "UpdateRejected"
      | "PromptingForManagement"
      | "ManagementRejected"
      | "Unknown";
    /**
     * The reason, if installation fails.
     */
    RejectionReason?:
      | "AppAlreadyInstalled"
      | "AppAlreadyQueued"
      | "AppStoreDisabled"
      | "CouldNotVerifyAppID"
      | "ManagementChangeNotSupported"
      | "NotAnApp"
      | "NotSupported"
      | "PurchaseMethodNotSupported"
      | "PurchaseMethodNotSupportedInMultiUser";
  };
}
