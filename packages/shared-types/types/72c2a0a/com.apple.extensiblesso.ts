/* eslint-disable */
/**
 * This file was automatically generated by mdm-docs-parser.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run mdm-docs-parser:generate to regenerate this file.
 */

/**
 * Configures an app extension to handle Kerberos SSO.
 */
export interface ComAppleExtensiblesso {
  /**
   * This value must be  'com.apple.AppSSOKerberos.KerberosExtension' for this extension.
   */
  ExtensionIdentifier: "com.apple.AppSSOKerberos.KerberosExtension";
  /**
   * This value must be 'apple' for the Kerberos extension.
   */
  TeamIdentifier: "apple";
  /**
   * This value must be 'Credential' for the Kerberos extension.
   */
  Type: "Credential";
  /**
   * The Kerberos realm, which should be properly capitalized. If in an Active Directory forest, this is the realm where the user logs in.
   */
  Realm: string;
  /**
   * This is the dictionary used by the Apple built-in Kerberos extension.
   */
  ExtensionData?: {
    /**
     * The GSS name of the Kerberos cache to use. Rarely set by an administrator.
     */
    cacheName?: string;
    /**
     * The principal (aka username) to use. You do not need to include the realm.
     */
    principalName?: string;
    /**
     * The name of the Active Directory site the Kerberos extension should use. Most administrators will never need to modify this value, as the Kerberos extension can normally find the site automatically.
     */
    siteCode?: string;
    /**
     * The PayloadUUID of a PKINIT certificate.
     */
    certificateUUID?: string;
    /**
     * If 'false', the Kerberos extension doesn't automatically use LDAP and DNS to determine its AD site name.
     */
    useSiteAutoDiscovery?: boolean;
    /**
     * A list of bundle IDs allowed to access the ticket-granting ticket (TGT).
     */
    credentialBundleIdACL?: string[];
    /**
     * If 'true', the Kerberos extension allows only managed apps to access and use the credential. This is in addition to the 'credentialBundleIDACL', if it is specified. Available in iOS 14 and later, and macOS 12 and later.
     */
    includeManagedAppsInBundleIdACL?: boolean;
    /**
     * If 'true', the Kerberos extension allows the standard kerberos utilities including 'TicketViewer' and 'klist' to access and use the credential. This is in addition to 'includeManagedAppsInBundleIdACL' or the 'credentialBundleIdACL', if it is specified.
     * Available in macOS 12 and later.
     */
    includeKerberosAppsInBundleIdACL?: boolean;
    /**
     * A custom domain-realm mapping for Kerberos. This is used when the DNS name of hosts do not match the realm name. Most administrators will not need to customize this.
     */
    domainRealmMapping?: {
      /**
       * The key should be the name of the realm, and the value is an array of DNS suffixes that map to the realm.
       */
      Realm?: string[];
    };
    /**
     * This property specifies it is the default realm if there is more than one Kerberos extension configuration.
     */
    isDefaultRealm?: boolean;
    /**
     * The custom user name label used in the Kerberos extension instead of “Username”. For example, “Company ID”. Available in macOS 11 and later.
     */
    customUsernameLabel?: string;
    /**
     * The text to be displayed to the user at the bottom of the Kerberos login window. It can be used to display help information or disclaimer text. Available in iOS 14 and later and macOS 11 and later.
     */
    helpText?: string;
    /**
     * If 'false', disables password changes. Available in macOS 10.15 and later.
     */
    allowPasswordChange?: boolean;
    /**
     * If 'false', passwords are not allowed to be saved to the keychain.
     */
    allowAutomaticLogin?: boolean;
    /**
     * If 'true', requires the user to provide Touch ID, Face ID or their passcode to access the keychain entry.
     */
    requireUserPresence?: boolean;
    /**
     * The number of days that passwords can be used on this domain. For most domains, this can be calculated automatically. Available in macOS 10.15 and later.
     */
    pwExpireOverride?: number;
    /**
     * The number of days prior to password expiration when a notification of password expiration will be sent to the user. Available in macOS 10.15 and later.
     */
    pwNotificationDays?: number;
    /**
     * The minimum length of passwords on the domain.Available in macOS 10.15 and later.
     */
    pwReqLength?: number;
    /**
     * If 'true', passwords must meet Active Directory's definition of 'complex'.Available in macOS 10.15 and later.
     */
    pwReqComplexity?: boolean;
    /**
     * The minimum age of passwords before they can be changed on this domain. Available in macOS 10.15 and later.
     */
    pwReqMinAge?: number;
    /**
     * The number of prior passwords that cannot be re-used on this domain.Available in macOS 10.15 and later.
     */
    pwReqHistory?: number;
    /**
     * The text version of the domain's password requirements. Only for use if 'pwReqComplexity' or 'pwReqLength' aren't specified. Available in macOS 10.15 and later.
     */
    pwReqText?: string;
    /**
     * This URL will launch in the user's default web browser when they initiate a password change. Available in macOS 10.15 and later.
     */
    pwChangeURL?: string;
    /**
     * If 'false', disables password sync. Note that this will not work if the user is logged in with a mobile account. Available in macOS 10.15 and later.
     */
    syncLocalPassword?: boolean;
    /**
     * The time, in seconds, required to replicate changes in the Active Directory domain. The Kerberos extension will use this when checking password age after a change. Available in macOS 11 and later.
     */
    replicationTime?: number;
    /**
     * If 'true', doesn't prompt the user to setup the Kerberos extension until either the administrator enables it with the 'app-sso' tool or a Kerberos challenge is received. Available in macOS 11 and later.
     */
    delayUserSetup?: boolean;
    /**
     * If 'false', the credential is requested on the next matching Kerberos challenge or network state change.
     * If the credential is expired or missing, a new one will be created. Available in macOS 11 and later.
     */
    monitorCredentialsCache?: boolean;
    /**
     * Require that LDAP connections use TLS. Available in macOS 11 and later.
     */
    requireTLSForLDAP?: boolean;
    /**
     * This setting affects how the Kerberos Extension credential is used by other processes. Use of the following:
     * * 'always -' The extension credential will always be used if the SPN matches the Kerberos Extension 'Hosts' array. The credential will not be used if the calling app is not in the 'credentialBundleIDACL'.
     * * 'whenNotSpecified -' The credential will only be used when another credential has not been specified by the caller and the SPN matches the Kerberos Extensions 'Hosts' array. The credential will not be used if the calling app is not in the 'credentialBundleIDACL'.
     * * 'kerberosDefault - 'The default Kerberos processes for selecting credentials is used which normally uses the default Kerberos credential. This is the same as turning off this capability.
     * Available in macOS 11 and later.
     */
    credentialUseMode?: "always" | "whenNotSpecified" | "kerberosDefault";
    /**
     * The ordered list of preferred Key Distribution Centers (KDCs) to use for Kerberos traffic. Use this if the servers are not discoverable via DNS. If the servers are specified, then they are used for both connectivity checks and attempted first for Kerberos traffic. If the servers do not respond, then the device falls back to DNS discovery. Each entry is formatted the same as it would be in a 'krb5.conf' file. Examples of entries are:
     * * 'adserver1.example.com'
     * * 'tcp/adserver1.example.com:88'
     * * 'kkdcp://kerberosproxy.example.com:443/kkdcp'
     */
    preferredKDCs?: string[];
    /**
     * If 'true', requires this configuration uses a TGT from Platform SSO instead of requesting a new one.
     * Available in macOS 13 and later.
     */
    usePlatformSSOTGT?: boolean;
    /**
     * If 'true' and 'usePlatformSSOTGT' is 'true', allows the user to manually sign in.
     * Available in macOS 13 and later.
     */
    allowPlatformSSOAuthFallback?: boolean;
    /**
     * If 'true', the Kerberos Extension handles Kerberos requests only. It doesn't check for password expiration, show the password expiration in the menu, check for external password changes, perform password sync, or retrieve the home directory.
     * Available in macOS 13 and later.
     */
    performKerberosOnly?: boolean;
  };
  /**
   * One or more host or domain names for which the app extension performs SSO. Host or domain names are matched case-insensitively, and all the host/domain names of all installed Extensible SSO payloads must be unique.
   * Hosts that begin with a “.” are wildcard suffixes and will match all subdomains, otherwise the host must be an exact match.
   */
  Hosts?: string[];
}
