/* eslint-disable */
/**
 * This file was automatically generated by mdm-docs-parser.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run mdm-docs-parser:generate to regenerate this file.
 */

export interface ComAppleSystemExtensionPolicy {
  /**
   * If 'false', restricts users from approving additional system extensions that configuration profiles don't explicitly allow.
   */
  AllowUserOverrides?: boolean;
  /**
   * An array of team identifiers that defines valid, signed system extensions that are allowable to load. Approved system extensions are those signed with any of the specified team identifiers.
   * To avoid requiring an administrator to authorize the operation, you can activate system extensions that this key specifies using activationRequestForExtension:queue:.
   * It's an error for the same team identifier to appear in both this array and as a key in the 'AllowedSystemExtensions' dictionary.
   */
  AllowedTeamIdentifiers?: string[];
  /**
   * A dictionary that maps a team identifier to an array of strings, where each string is a type of system extension that you can install for that team identifier. The allowed extension types are 'DriverExtension', 'NetworkExtension', and 'EndpointSecurityExtension'.
   * If there's no entry for a specified team identifier in the dictionary, the system allows all extension types.
   */
  AllowedSystemExtensionTypes?: {
    /**
     * The mapping of team identifier to an array of strings, where each string is a type of system extension that may be installed for that team identifier.
     */
    ANY?: string[];
  };
  /**
   * A dictionary of approved system extensions on the computer. The dictionary maps the team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension to install.
   * To avoid requiring an administrator to authorize the operation, you can activate system extensions that this key specifies using activationRequestForExtension:queue:.
   * It's an error for the same team identifier to appear in both the 'AllowedTeamIdentifiers' array and as a key in this dictionary.
   */
  AllowedSystemExtensions?: {
    /**
     * The mapping of team identifiers to arrays of bundle identifiers, where the bundle identifier is that of the system extension to be installed.
     */
    ANY?: string[];
  };
  /**
   * A dictionary of system extensions that are allowed to remove themselves from the machine. The dictionary maps team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension. An application using the 'OSSystemExtensionDeactivationRequest' API can deactivate the specified system extensions without requiring an administrator to authorize the operation.
   * Available in macOS 12 and later.
   */
  RemovableSystemExtensions?: {
    /**
     * The dictionary maps team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension.
     */
    ANY?: string[];
  };
}
