/* eslint-disable */
/**
 * This file was automatically generated by mdm-docs-parser.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run mdm-docs-parser:generate to regenerate this file.
 */

/**
 * Use this section to define settings for the Exchange ActiveSync account.
 */
export interface ComAppleEasAccount {
  /**
   * The full email address for the account. If not present in the payload, the device prompts for this string during profile installation.
   */
  EmailAddress?: string;
  /**
   * The Exchange server host name or IP address.
   * If using OAuth without an OAuthSignInURL, the host name is ignored.
   */
  Host?: string;
  /**
   * If 'true', enables SSL for authentication.
   */
  SSL?: boolean;
  /**
   * If 'true', enables OAuth for authentication. If enabled, don't specify a password.
   * Available only in iOS 12.0 and above.
   */
  OAuth?: boolean;
  /**
   * This user name for this Exchange account. The user name is required for noninteractive installations like MDM in iOS.
   */
  UserName?: string;
  /**
   * The password of the account. Use only with encrypted profiles.
   */
  Password?: string;
  /**
   * The '.p12' identity certificate in NSData blob format, for accounts that allow authentication via certificate.
   */
  Certificate?: string;
  /**
   * The name or description of the certificate.
   */
  CertificateName?: string;
  /**
   * The password necessary for the '.p12' identity certificate. Used with mandatory encryption of profiles.
   */
  CertificatePassword?: string;
  /**
   * If 'true', prevents messages from being moved out of this email account into another account. This setting also prevents forwarding or replying from an account other than the one the message was sent to.
   */
  PreventMove?: boolean;
  /**
   * If 'true', prevents this account from sending mail in any app other than the Apple Mail app.
   */
  PreventAppSheet?: boolean;
  /**
   * The UUID of of the certificate payload within the same profile to use for the identity credential. If this field is present, the Certificate field is not used.
   */
  PayloadCertificateUUID?: string;
  /**
   * If 'true', enables S/MIME encryption. In iOS 10.0 and later, this key is ignored. Use 'SMIMESigningEnabled' instead.
   */
  SMIMEEnabled?: boolean;
  /**
   * If 'true', enables S/MIME signing for this account. Available in iOS 10.0 and later.
   */
  SMIMESigningEnabled?: boolean;
  /**
   * The UUID of the identity certificate used to sign messages sent from this account.
   */
  SMIMESigningCertificateUUID?: string;
  /**
   * If 'true', enables S/MIME encryption for this account. Available in iOS 10.0 and later. As of iOS 12.0, this key is deprecated. It is recommended to use 'SMIMEEncryptByDefault' instead.
   */
  SMIMEEncryptionEnabled?: boolean;
  /**
   * The payload UUID of the identity certificate used to decrypt messages sent to this account. The public certificate is attached to outgoing mail to allow encrypted mail to be sent to this user. When the user sends encrypted mail, the public certificate is used to encrypt the copy of the mail in the user's Sent mailbox.
   */
  SMIMEEncryptionCertificateUUID?: string;
  /**
   * If 'true', displays the per-message encryption switch in the Mail Compose UI.
   * Available in iOS 8.0 and later. As of iOS 12.0, this key is deprecated. Use 'SMIMEEnableEncryptionPerMessageSwitch' instead.
   */
  SMIMEEnablePerMessageSwitch?: boolean;
  /**
   * If 'true', excludes this account from Recent Addresses syncing.
   */
  disableMailRecentsSyncing?: boolean;
  /**
   * The number of days in the past to sync mail on the device.
   */
  MailNumberOfPastDaysToSync?: 1 | 3 | 7 | 14 | 31;
  /**
   * The value of the 'X-Apple-Config-Magic' header in each EAS HTTP request.
   */
  HeaderMagic?: string;
  /**
   * The communication service handler rules for this account.
   */
  CommunicationServiceRules?: {
    /**
     * The default handlers to be used for contacts from this account.
     */
    DefaultServiceHandlers?: {
      /**
       * The bundle identifier of the default application to use for audio calls made to contacts from this account.
       */
      AudioCall?: string;
    };
  };
  /**
   * If 'true', enables this account to use Mail Drop.
   */
  allowMailDrop?: boolean;
  /**
   * If 'true', the user can turn S/MIME signing on or off in Settings. Available in iOS 12.0 and later.
   */
  SMIMESigningUserOverrideable?: boolean;
  /**
   * If 'true', the user can select the signing identity. Available in iOS 12.0 and later.
   */
  SMIMESigningCertificateUUIDUserOverrideable?: boolean;
  /**
   * If set to true, S/MIME encryption is enabled by default. If 'SMIMEEnableEncryptionPerMessageSwitch' is false, this default cannot be changed by the user. Available in iOS 12.0 and later.
   */
  SMIMEEncryptByDefault?: boolean;
  /**
   * If 'true', the user can turn encryption by default on/off, and encryption is on. Available in iOS 12.0 and later.
   */
  SMIMEEncryptByDefaultUserOverrideable?: boolean;
  /**
   * If 'true', the user can select the S/MIME encryption identity, and encryption is on.Available in iOS 12.0 and later.
   */
  SMIMEEncryptionCertificateUUIDUserOverrideable?: boolean;
  /**
   * If 'true', displays the per-message encryption switch in the Mail Compose UI. Available in iOS 12.0 and later.
   */
  SMIMEEnableEncryptionPerMessageSwitch?: boolean;
  /**
   * If 'false', disables the Mail service for this account. The Mail service may be re-enabled in Settings unless 'EnableMailUserOverridable' is 'false'.
   * 'EnableMail', 'EnableContacts', 'EnableCalendars', 'EnableReminders', and 'EnableNotes' can't all be set to 'false'.
   */
  EnableMail?: boolean;
  /**
   * If 'false', disables the Contacts service for this account. The Contacts service may be re-enabled in Settings unless 'EnableContactsUserOverridable' is 'false'.
   * 'EnableMail', 'EnableContacts', 'EnableCalendars', 'EnableReminders', and 'EnableNotes' can't all be set to 'false'.
   */
  EnableContacts?: boolean;
  /**
   * If 'false', disables the Calendars service for this account. The Calendars service may be re-enabled in Settings unless 'EnableCalendarsUserOverridable' is 'false'.
   * 'EnableMail', 'EnableContacts', 'EnableCalendars', 'EnableReminders', and 'EnableNotes' can't all be set to 'false'.
   */
  EnableCalendars?: boolean;
  /**
   * If 'false', disables the Reminders service for this account. The Reminders service may be re-enabled in Settings unless 'EnableRemindersUserOverridable' is false.
   * 'EnableMail', 'EnableContacts', 'EnableCalendars', 'EnableReminders', and 'EnableNotes' can't all be set to 'false'.
   */
  EnableReminders?: boolean;
  /**
   * If 'false', disables the Notes service for this account. The Notes service may be re-enabled in Settings unless 'EnableNotesUserOverridable' is 'false'.
   * 'EnableMail', 'EnableContacts', 'EnableCalendars', 'EnableReminders', and 'EnableNotes' can't all be set to 'false'.
   */
  EnableNotes?: boolean;
  /**
   * If 'false', prevents the user from changing the state of the Mail service for this account in Settings.
   */
  EnableMailUserOverridable?: boolean;
  /**
   * If 'false', prevents the user from changing the state of the Contacts service for this account in Settings.
   */
  EnableContactsUserOverridable?: boolean;
  /**
   * If 'false', prevents the user from changing the state of the Calendars service for this account in Settings.
   */
  EnableCalendarsUserOverridable?: boolean;
  /**
   * If 'false', prevents the user from changing the state of the Reminders service for this account in Settings.
   */
  EnableRemindersUserOverridable?: boolean;
  /**
   * If 'false', prevents the user from changing the state of the Notes service for this account in Settings.
   */
  EnableNotesUserOverridable?: boolean;
  /**
   * The URL that this account should use for signing in via OAuth. When this URL is specified, auto-discovery is not used for this account so you must also specify a host.
   * This field is ignored unless 'OAuth' is 'true'.
   */
  OAuthSignInURL?: string;
  /**
   * The URL that this account should use for token requests via OAuth.
   * This field is ignored unless 'OAuth' is 'true'.
   */
  OAuthTokenRequestURL?: string;
  /**
   * If 'true',  overrides the previous user/EAS password with the new EAS password in the payload. Available in iOS 14 and later.
   */
  OverridePreviousPassword?: boolean;
  /**
   * The VPNUUID of the per-app VPN the account uses for network communication.
   * Available in iOS 14 and later.
   */
  VPNUUID?: string;
}
