/* eslint-disable */
/**
 * This file was automatically generated by mdm-docs-parser.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run mdm-docs-parser:generate to regenerate this file.
 */

/**
 * Use this section to define managed email and web domains.
 */
export interface ComAppleWebcontentFilter {
  /**
   * The type of filter, built-in or plug-in. In macOS, the system supports only the plug-in value.
   */
  FilterType?: "BuiltIn" | "Plugin";
  /**
   * If 'true', automatic filtering is in an enabled state. This function evaluates each web page as it loads and attempts to identify and block content not suitable for children. The search algorithm is complex and may vary from release to release, but it's basically looking for adult language.
   */
  AutoFilterEnabled?: boolean;
  /**
   * An array or URLs that are accessible whether or not the automatic filter allows access. The system uses this array only when 'AutoFilterEnabled' is 'true'. Otherwise, it ignores this field.
   */
  PermittedURLs?: string[];
  /**
   * Use 'DenyListURLs' instead.
   */
  BlacklistedURLs?: string[];
  /**
   * An array of URLs that are inaccessible. Limit the number of these URLs to about 500.
   */
  DenyListURLs?: string[];
  /**
   * Use 'AllowListBookmarks' instead.
   */
  WhitelistedBookmarks?: {
    /**
     * The URL of the bookmark in the allow list.
     */
    URL: string;
    /**
     * The title of the bookmark.
     */
    Title: string;
  }[];
  /**
   * An array of dictionaries defining the pages that the user can visit.
   */
  AllowListBookmarks?: {
    /**
     * The URL of the bookmark in the allow list.
     */
    URL: string;
    /**
     * The title of the bookmark.
     */
    Title: string;
  }[];
  /**
   * The display name for this filtering configuration.
   */
  UserDefinedName?: string;
  /**
   * The bundle ID of the plug-in that provides filtering service.
   */
  PluginBundleID?: string;
  /**
   * The server address, which may be the IP address, hostname, or URL.
   */
  ServerAddress?: string;
  /**
   * The user name for the service.
   */
  UserName?: string;
  /**
   * The password for the service.
   */
  Password?: string;
  /**
   * The UUID of the certificate payload within the same profile that the system uses to authenticate the user.
   */
  PayloadCertificateUUID?: string;
  /**
   * The organization string that passes to the third-party plug-in.
   */
  Organization?: string;
  /**
   * The custom dictionary that the filtering service plug-in needs.
   */
  VendorConfig?: {
    /**
     * The custom key/value pairs for the filtering service.
     */
    ANY: string;
  };
  /**
   * If 'true', enables the filtering of WebKit traffic. Either 'FilterBrowsers' or 'FilterSockets' must be 'true'.
   */
  FilterBrowsers?: boolean;
  /**
   * If 'true', enables the filtering of socket traffic. Either 'FilterBrowsers' or 'FilterSockets' must be 'true'.
   */
  FilterSockets?: boolean;
  /**
   * The designated requirement string that the system embeds in the code signature of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. This field is a requirement if 'FilterSockets' is 'true'.
   * Available in macOS 10.15 and later.
   */
  FilterDataProviderDesignatedRequirement?: string;
  /**
   * The bundle identifier string of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. This field is a requirement if 'FilterSockets' is 'true'.
   * Available in macOS 10.15 and later.
   */
  FilterDataProviderBundleIdentifier?: string;
  /**
   * If this value is 'true', the property enables the filtering of network packets.
   * Either 'FilterPackets' or 'FilterSockets' must be 'true'.
   * You can only use this when 'FilterType' is 'Plugin'.
   * Available in macOS 10.15 and later.
   */
  FilterPackets?: boolean;
  /**
   * The designated requirement string that the system embeds in the code signature of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. This field is a requirement if 'FilterPackets' is 'true'.
   * Available in macOS 10.15 and later.
   */
  FilterPacketProviderDesignatedRequirement?: string;
  /**
   * The bundle identifier string of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. This field is a requirement if 'FilterPackets' is 'true'.
   * Available in macOS 10.15 and later.
   */
  FilterPacketProviderBundleIdentifier?: string;
  /**
   * This value is for deriving the relative order of content filters. Filters with a grade of 'firewall' see network traffic before filters with a grade of 'inspector'. The system doesn't define the order of filters within a grade.
   * Available in macOS 10.15 and later.
   */
  FilterGrade?: "firewall" | "inspector";
  /**
   * A globally-unique identifier for this content filter configuration. Managed apps with the same 'ContentFilterUUID' in their app attributes have their network traffic processed by the content filter. This key must be present for unsupervised devices and user enrollments.
   */
  ContentFilterUUID?: string;
}
